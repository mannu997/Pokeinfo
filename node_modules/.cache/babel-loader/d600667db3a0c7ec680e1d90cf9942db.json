{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/monu/Desktop/Webd/robofriends/src/Fetchpokemon.js\";\nimport React, { Component } from 'react';\nimport Pictures from './Pictures';\nimport Card from './Card';\n\nclass Fetchpokemon extends Component {\n  constructor() {\n    super();\n\n    this.onClickFunction = (event, pokemonkey) => {\n      this.setState({\n        eventCounter: eventCounter + 1\n      });\n\n      if (this.state.eventCounter > 1) {\n        this.setState({\n          id: pokemonkey\n        });\n        this.setState({\n          clickcaller: true\n        });\n      } else {\n        this.setState({\n          clickcaller: false\n        });\n      }\n    };\n\n    this.state = {\n      info: [],\n      loading: true,\n      clickcaller: false,\n      id: 0,\n      eventCounter: 0\n    };\n  }\n\n  componentDidMount() {\n    const urls = this.props.data.url;\n    Promise.all(urls.map(url => fetch(url).then(resp => resp.json()))).then(array => {\n      var info = [];\n      info.push(array);\n      info = info[0];\n      this.setState({\n        info,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    if (this.state.clickcaller) {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        info: this.state.info,\n        pokemonkey: this.state.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (!this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(Pictures, {\n        info: this.state.info,\n        clickFunction: this.onClickFunction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default Fetchpokemon;","map":{"version":3,"sources":["/home/monu/Desktop/Webd/robofriends/src/Fetchpokemon.js"],"names":["React","Component","Pictures","Card","Fetchpokemon","constructor","onClickFunction","event","pokemonkey","setState","eventCounter","state","id","clickcaller","info","loading","componentDidMount","urls","props","data","url","Promise","all","map","fetch","then","resp","json","array","push","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACjCI,EAAAA,WAAW,GAAG;AACb;;AADa,SA2BlBC,eA3BkB,GA2BA,CAACC,KAAD,EAAOC,UAAP,KAAqB;AAClC,WAAKC,QAAL,CAAc;AAACC,QAAAA,YAAY,EAACA,YAAY,GAAC;AAA3B,OAAd;;AACA,UAAI,KAAKC,KAAL,CAAWD,YAAX,GAAwB,CAA5B,EAA8B;AAC9B,aAAKD,QAAL,CAAc;AAACG,UAAAA,EAAE,EAACJ;AAAJ,SAAd;AACA,aAAKC,QAAL,CAAc;AAACI,UAAAA,WAAW,EAAC;AAAb,SAAd;AACC,OAHD,MAIK;AACJ,aAAKJ,QAAL,CAAc;AAACI,UAAAA,WAAW,EAAC;AAAb,SAAd;AACA;AACL,KApCiB;;AAEb,SAAKF,KAAL,GAAa;AACZG,MAAAA,IAAI,EAAC,EADO;AAEZC,MAAAA,OAAO,EAAC,IAFI;AAGVF,MAAAA,WAAW,EAAC,KAHF;AAIVD,MAAAA,EAAE,EAAC,CAJO;AAKVF,MAAAA,YAAY,EAAC;AALH,KAAb;AAQA;;AACDM,EAAAA,iBAAiB,GAAE;AACf,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAA7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,GAAL,CAASH,GAAG,IACvBI,KAAK,CAACJ,GAAD,CAAL,CAAWK,IAAX,CAAgBC,IAAI,IAAGA,IAAI,CAACC,IAAL,EAAvB,CADW,CAAZ,EAGCF,IAHD,CAGMG,KAAK,IAAG;AACP,UAAId,IAAI,GAAG,EAAX;AACAA,MAAAA,IAAI,CAACe,IAAL,CAAUD,KAAV;AACAd,MAAAA,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAX;AACA,WAAKL,QAAL,CAAc;AAACK,QAAAA,IAAD;AAAMC,QAAAA,OAAO,EAAC;AAAd,OAAd;AACP,KARA;AAYH;;AAaDe,EAAAA,MAAM,GAAE;AACP,QAAI,KAAKnB,KAAL,CAAWE,WAAf,EAA2B;AAEzB,0BACC,QAAC,IAAD;AAAM,QAAA,IAAI,EAAI,KAAKF,KAAL,CAAWG,IAAzB;AAA+B,QAAA,UAAU,EAAG,KAAKH,KAAL,CAAWC;AAAvD;AAAA;AAAA;AAAA;AAAA,cADD;AAIN;;AACE,QAAI,CAAC,KAAKD,KAAL,CAAWI,OAAhB,EAAwB;AACvB,0BAAO,QAAC,QAAD;AAAU,QAAA,IAAI,EAAI,KAAKJ,KAAL,CAAWG,IAA7B;AAAmC,QAAA,aAAa,EAAE,KAAKR;AAAvD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFE,MAGC;AACH,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACA;AAEA;;AAtDoC;;AA+DrC,eAAeF,YAAf","sourcesContent":["import React,{Component} from 'react';\nimport Pictures from './Pictures';\nimport Card from './Card';\n\nclass Fetchpokemon extends Component {\n    constructor (){\n    \tsuper();\n    \tthis.state = {\n    \t\tinfo:[],\n    \t\tloading:true,\n        clickcaller:false,\n        id:0,\n        eventCounter:0\n        \n    \t}\n    }\n    componentDidMount(){\n        const urls = this.props.data.url;\n        Promise.all(urls.map(url=>\n        \tfetch(url).then(resp =>resp.json())\n        ))\n        .then(array =>{ \n               var info = [];     \t\n               info.push(array)\n               info = info[0]\n               this.setState({info,loading:false})\t\n       })\n       \n            \n   \n    }\n  \nonClickFunction = (event,pokemonkey)=> {\n     this.setState({eventCounter:eventCounter+1})\n     if (this.state.eventCounter>1){\n     this.setState({id:pokemonkey})\n     this.setState({clickcaller:true});\n     }\n     else {\n      this.setState({clickcaller:false})\n     }\n}\n\n    render(){\n     if (this.state.clickcaller){\n\n       return (\n        <Card info = {this.state.info} pokemonkey ={this.state.id}  />\n        \n        )\n}\n   if (!this.state.loading){\n    return <Pictures info = {this.state.info} clickFunction={this.onClickFunction}/>;\n}\nelse{\n\treturn <h1>Loading</h1>\n}\n\n}\n\n\n\n}\n\n\n\n\nexport default Fetchpokemon;"]},"metadata":{},"sourceType":"module"}