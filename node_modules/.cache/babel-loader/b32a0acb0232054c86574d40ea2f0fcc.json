{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/monu/Desktop/Webd/github/Pokeinfo/src/Fetchpokemon.js\";\nimport React, { Component } from 'react';\nimport Pictures from './Pictures';\nimport Card from './Card';\n\nclass Fetchpokemon extends Component {\n  constructor() {\n    super();\n\n    this.onClickFunction = (event, pokemonkey) => {\n      this.setState({\n        id: pokemonkey\n      });\n      this.setState({\n        clickcaller: true\n      });\n    };\n\n    this.state = {\n      info: [],\n      loading: true,\n      clickcaller: false,\n      id: 0\n    };\n  }\n\n  componentDidMount() {\n    const urls = this.props.data.url;\n    Promise.all(urls.map(url => fetch(url).then(resp => resp.json()))).then(array => {\n      var info = [];\n      info.push(array);\n      info = info[0];\n      this.setState({\n        info,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    if (this.state.clickcaller) {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        info: this.state.info,\n        pokemonkey: this.state.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this);\n    }\n\n    if (!this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(Pictures, {\n        info: this.state.info,\n        clickFunction: this.onClickFunction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"pokemonapi\",\n        src: \"pokeAPI.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }, this);\n    }\n  }\n\n}\n\nexport default Fetchpokemon;","map":{"version":3,"sources":["/home/monu/Desktop/Webd/github/Pokeinfo/src/Fetchpokemon.js"],"names":["React","Component","Pictures","Card","Fetchpokemon","constructor","onClickFunction","event","pokemonkey","setState","id","clickcaller","state","info","loading","componentDidMount","urls","props","data","url","Promise","all","map","fetch","then","resp","json","array","push","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACjCI,EAAAA,WAAW,GAAG;AACb;;AADa,SA2BdC,eA3Bc,GA2BI,CAACC,KAAD,EAAOC,UAAP,KAAqB;AACpC,WAAKC,QAAL,CAAc;AAACC,QAAAA,EAAE,EAACF;AAAJ,OAAd;AACA,WAAKC,QAAL,CAAc;AAACE,QAAAA,WAAW,EAAC;AAAb,OAAd;AACF,KA9Ba;;AAEb,SAAKC,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAC,EADO;AAEZC,MAAAA,OAAO,EAAC,IAFI;AAGVH,MAAAA,WAAW,EAAC,KAHF;AAIVD,MAAAA,EAAE,EAAC;AAJO,KAAb;AAMA;;AAEDK,EAAAA,iBAAiB,GAAE;AACf,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAA7B;AACAC,IAAAA,OAAO,CACNC,GADD,CACKL,IAAI,CAACM,GAAL,CAASH,GAAG,IACfI,KAAK,CAACJ,GAAD,CAAL,CAAWK,IAAX,CAAgBC,IAAI,IAAGA,IAAI,CAACC,IAAL,EAAvB,CADG,CADL,EAICF,IAJD,CAIMG,KAAK,IAAG;AACZ,UAAId,IAAI,GAAG,EAAX;AACAA,MAAAA,IAAI,CAACe,IAAL,CAAUD,KAAV;AACAd,MAAAA,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAX;AACA,WAAKJ,QAAL,CAAc;AAACI,QAAAA,IAAD;AAAMC,QAAAA,OAAO,EAAC;AAAd,OAAd;AACF,KATA;AAWH;;AASDe,EAAAA,MAAM,GAAE;AACN,QAAI,KAAKjB,KAAL,CAAWD,WAAf,EAA2B;AACzB,0BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAI,KAAKC,KAAL,CAAWC,IAAzB;AAA+B,QAAA,UAAU,EAAG,KAAKD,KAAL,CAAWF;AAAvD;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;;AAED,QAAI,CAAC,KAAKE,KAAL,CAAWE,OAAhB,EAAwB;AACtB,0BAAO,QAAC,QAAD;AAAU,QAAA,IAAI,EAAI,KAAKF,KAAL,CAAWC,IAA7B;AAAmC,QAAA,aAAa,EAAE,KAAKP;AAAvD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAGK;AACH,0BAAO;AAAK,QAAA,GAAG,EAAG,YAAX;AAAwB,QAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AAEF;;AA/CgC;;AAiDrC,eAAeF,YAAf","sourcesContent":["import React,{Component} from 'react';\nimport Pictures from './Pictures';\nimport Card from './Card';\n\nclass Fetchpokemon extends Component {\n    constructor (){\n    \tsuper();\n    \tthis.state = {\n    \t\tinfo:[],\n    \t\tloading:true,\n        clickcaller:false,\n        id:0,\n      }\n    }\n    \n    componentDidMount(){\n        const urls = this.props.data.url;\n        Promise\n        .all(urls.map(url=>\n          fetch(url).then(resp =>resp.json())\n        ))\n        .then(array =>{ \n          var info = [];     \t\n          info.push(array)\n          info = info[0]\n          this.setState({info,loading:false})\t\n       })\n        \n    }\n\n \n  \n    onClickFunction = (event,pokemonkey)=> {\n       this.setState({id:pokemonkey})\n       this.setState({clickcaller:true});\n    }\n\n    render(){\n      if (this.state.clickcaller){\n        return (\n          <Card info = {this.state.info} pokemonkey ={this.state.id}  />\n        )\n      }\n \n      if (!this.state.loading){\n        return <Pictures info = {this.state.info} clickFunction={this.onClickFunction}/>;\n      }\n      else {\n\t       return <img alt = \"pokemonapi\" src=\"pokeAPI.png\" />\n      }\n\n    }\n}\nexport default Fetchpokemon;"]},"metadata":{},"sourceType":"module"}